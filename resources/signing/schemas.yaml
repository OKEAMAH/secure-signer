components:
  schemas:
    AttestationEvidence:
      type: "object"
      properties:
        raw_report:
          type: "string"
          description: "The raw report obtained via EPID remote attestation with Intel Attestation Service"
          example: '{\"id\":\"120944542146395450500266129266876628073\",\"timestamp\":\"2023-01-19T22:08:32.197334\",\"version\":4,\"epidPseudonym\":\"EbrM6X6YCH3brjPXT23gVh/I2EG5sVfHYh+S54fb0rrAqVRTiRTOSfLsWSVTZc8wrazGG7oooGoMU7Gj5TEhsvsDIV4aYpvkSk/E3Tsb7CaGd+Iy1cEhLO4GPwdmwt/PXNQQ3htLdy3aNb7iQMrNbiFcdkVdV/tepdezMsSB8Go=\",\"advisoryURL\":\"https://security-center.intel.com\",\"advisoryIDs\":[\"INTEL-SA-00334\",\"INTEL-SA-00615\"],\"isvEnclaveQuoteStatus\":\"SW_HARDENING_NEEDED\",\"isvEnclaveQuoteBody\":\"AgABAIAMAAANAA0AAAAAAEJhbJjVPJcSY5RHybDnAD8AAAAAAAAAAAAAAAAAAAAAFBQLB/+ADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAAAAAAfAAAAAAAAANqMEbQOfHQIMRPXjiarcfU2OGQgJTSFT8UXb3I19gzSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACD1xnnferKFHD2uvYqTXdDA8iZ22kCD5xw7h38CMfOngAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDSUNK0HAOeb5lwMcEOUXfQmvW1+KIwWZx32nYIjRPGwzo3oA2ClBVCteCtoA1yxgAAAAAAAAAAAAAAAAAAAAA\"}'
        signed_report:
          type: "string"
          description: "The signature over the `raw_report` using the `singing_cert`."
          example: 'jmabfL+XCFhBSRVXqxc9sGDJ46FO0u1DHztqpOxHgHYloDyrxtJhLAGssnpOpzTW2N8EzYMRPtY48MQiKJN9fcDvF4OgSuUMXKf1wq9SB6N5qRstSDer3fAETQH4L3pCAIW2wIh5yKAs6DTxNGhWDvYFV/CRvlUKsQYjLBqFCMDnhCouzV1DknxgpS0msO/fIltCJMssx+riAuDdy4xn9FBFtZeIO+CzQD1OOWGSyaeP0h80ZF1j4HwSpL68L5k0mXV6/tTIGTZbXMd9XAgkYbWxfS41CnE8Op/mhZwYFdPJrKuAjdmLAsya9Tt75pb10d7Lz7IS9bzo0H+RxGJvBQ=='
        signing_cert:
          type: "string"
          description: "The concatenated leaf and root CA certificates from Intel."
          example: '-----BEGIN CERTIFICATE-----\nMIIEoTCCAwmgAwIBAgIJANEHdl0yo7CWMA0GCSqGSIb3DQEBCwUAMH4xCzAJBgNV\nBAYTAlVTMQswCQYDVQQIDAJDQTEUMBIGA1UEBwwLU2FudGEgQ2xhcmExGjAYBgNV\nBAoMEUludGVsIENvcnBvcmF0aW9uMTAwLgYDVQQDDCdJbnRlbCBTR1ggQXR0ZXN0\nYXRpb24gUmVwb3J0IFNpZ25pbmcgQ0EwHhcNMTYxMTIyMDkzNjU4WhcNMjYxMTIw\nMDkzNjU4WjB7MQswCQYDVQQGEwJVUzELMAkGA1UECAwCQ0ExFDASBgNVBAcMC1Nh\nbnRhIENsYXJhMRowGAYDVQQKDBFJbnRlbCBDb3Jwb3JhdGlvbjEtMCsGA1UEAwwk\nSW50ZWwgU0dYIEF0dGVzdGF0aW9uIFJlcG9ydCBTaWduaW5nMIIBIjANBgkqhkiG\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqXot4OZuphR8nudFrAFiaGxxkgma/Es/BA+t\nbeCTUR106AL1ENcWA4FX3K+E9BBL0/7X5rj5nIgX/R/1ubhkKWw9gfqPG3KeAtId\ncv/uTO1yXv50vqaPvE1CRChvzdS/ZEBqQ5oVvLTPZ3VEicQjlytKgN9cLnxbwtuv\nLUK7eyRPfJW/ksddOzP8VBBniolYnRCD2jrMRZ8nBM2ZWYwnXnwYeOAHV+W9tOhA\nImwRwKF/95yAsVwd21ryHMJBcGH70qLagZ7Ttyt++qO/6+KAXJuKwZqjRlEtSEz8\ngZQeFfVYgcwSfo96oSMAzVr7V0L6HSDLRnpb6xxmbPdqNol4tQIDAQABo4GkMIGh\nMB8GA1UdIwQYMBaAFHhDe3amfrzQr35CN+s1fDuHAVE8MA4GA1UdDwEB/wQEAwIG\nwDAMBgNVHRMBAf8EAjAAMGAGA1UdHwRZMFcwVaBToFGGT2h0dHA6Ly90cnVzdGVk\nc2VydmljZXMuaW50ZWwuY29tL2NvbnRlbnQvQ1JML1NHWC9BdHRlc3RhdGlvblJl\ncG9ydFNpZ25pbmdDQS5jcmwwDQYJKoZIhvcNAQELBQADggGBAGcIthtcK9IVRz4r\nRq+ZKE+7k50/OxUsmW8aavOzKb0iCx07YQ9rzi5nU73tME2yGRLzhSViFs/LpFa9\nlpQL6JL1aQwmDR74TxYGBAIi5f4I5TJoCCEqRHz91kpG6Uvyn2tLmnIdJbPE4vYv\nWLrtXXfFBSSPD4Afn7+3/XUggAlc7oCTizOfbbtOFlYA4g5KcYgS1J2ZAeMQqbUd\nZseZCcaZZZn65tdqee8UXZlDvx0+NdO0LR+5pFy+juM0wWbu59MvzcmTXbjsi7HY\n6zd53Yq5K244fwFHRQ8eOB0IWB+4PfM7FeAApZvlfqlKOlLcZL2uyVmzRkyR5yW7\n2uo9mehX44CiPJ2fse9Y6eQtcfEhMPkmHXI01sN+KwPbpA39+xOsStjhP9N1Y1a2\ntQAVo+yVgLgV2Hws73Fc0o3wC78qPEA+v2aRs/Be3ZFDgDyghc/1fgU+7C+P6kbq\nd4poyb6IW8KCJbxfMJvkordNOgOUUxndPHEi/tb/U7uLjLOgPA==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFSzCCA7OgAwIBAgIJANEHdl0yo7CUMA0GCSqGSIb3DQEBCwUAMH4xCzAJBgNV\nBAYTAlVTMQswCQYDVQQIDAJDQTEUMBIGA1UEBwwLU2FudGEgQ2xhcmExGjAYBgNV\nBAoMEUludGVsIENvcnBvcmF0aW9uMTAwLgYDVQQDDCdJbnRlbCBTR1ggQXR0ZXN0\nYXRpb24gUmVwb3J0IFNpZ25pbmcgQ0EwIBcNMTYxMTE0MTUzNzMxWhgPMjA0OTEy\nMzEyMzU5NTlaMH4xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTEUMBIGA1UEBwwL\nU2FudGEgQ2xhcmExGjAYBgNVBAoMEUludGVsIENvcnBvcmF0aW9uMTAwLgYDVQQD\nDCdJbnRlbCBTR1ggQXR0ZXN0YXRpb24gUmVwb3J0IFNpZ25pbmcgQ0EwggGiMA0G\nCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQCfPGR+tXc8u1EtJzLA10Feu1Wg+p7e\nLmSRmeaCHbkQ1TF3Nwl3RmpqXkeGzNLd69QUnWovYyVSndEMyYc3sHecGgfinEeh\nrgBJSEdsSJ9FpaFdesjsxqzGRa20PYdnnfWcCTvFoulpbFR4VBuXnnVLVzkUvlXT\nL/TAnd8nIZk0zZkFJ7P5LtePvykkar7LcSQO85wtcQe0R1Raf/sQ6wYKaKmFgCGe\nNpEJUmg4ktal4qgIAxk+QHUxQE42sxViN5mqglB0QJdUot/o9a/V/mMeH8KvOAiQ\nbyinkNndn+Bgk5sSV5DFgF0DffVqmVMblt5p3jPtImzBIH0QQrXJq39AT8cRwP5H\nafuVeLHcDsRp6hol4P+ZFIhu8mmbI1u0hH3W/0C2BuYXB5PC+5izFFh/nP0lc2Lf\n6rELO9LZdnOhpL1ExFOq9H/B8tPQ84T3Sgb4nAifDabNt/zu6MmCGo5U8lwEFtGM\nRoOaX4AS+909x00lYnmtwsDVWv9vBiJCXRsCAwEAAaOByTCBxjBgBgNVHR8EWTBX\nMFWgU6BRhk9odHRwOi8vdHJ1c3RlZHNlcnZpY2VzLmludGVsLmNvbS9jb250ZW50\nL0NSTC9TR1gvQXR0ZXN0YXRpb25SZXBvcnRTaWduaW5nQ0EuY3JsMB0GA1UdDgQW\nBBR4Q3t2pn680K9+QjfrNXw7hwFRPDAfBgNVHSMEGDAWgBR4Q3t2pn680K9+Qjfr\nNXw7hwFRPDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADANBgkq\nhkiG9w0BAQsFAAOCAYEAeF8tYMXICvQqeXYQITkV2oLJsp6J4JAqJabHWxYJHGir\nIEqucRiJSSx+HjIJEUVaj8E0QjEud6Y5lNmXlcjqRXaCPOqK0eGRz6hi+ripMtPZ\nsFNaBwLQVV905SDjAzDzNIDnrcnXyB4gcDFCvwDFKKgLRjOB/WAqgscDUoGq5ZVi\nzLUzTqiQPmULAQaB9c6Oti6snEFJiCQ67JLyW/E83/frzCmO5Ru6WjU4tmsmy8Ra\nUd4APK0wZTGtfPXU7w+IBdG5Ez0kE1qzxGQaL4gINJ1zMyleDnbuS8UicjJijvqA\n152Sq049ESDz+1rRGc2NVEqh1KaGXmtXvqxXcTB+Ljy5Bw2ke0v8iGngFBPqCTVB\n3op5KBG3RjbF6RRSzwzuWfL7QErNC8WEy5yDVARzTA5+xmBc388v9Dm21HGfcC8O\nDD+gT9sSpssq0ascmvH49MOgjt1yoysLtdCtJW/9FZpoOypaHx0R+mJTLwPXVMrv\nDaVzWh5aiEx+idkSGMnX\n-----END CERTIFICATE-----\n'
    RemoteAttestationResponse:
      type: "object"
      properties:
        pub_key:
          type: "string"
          description: "Hex encoded public key (33B for ETH SECP256K1, 48B for BLS) "
          example: '0x025f163d5de3470d4b3bf9f739d661a88aeccc257fc4f4735d8c1a905baf5e813b'
        evidence:
          $ref: '#/components/schemas/AttestationEvidence'
    Signing:
      type: "object"
      properties:
        type:
          type: "string"
        fork_info:
          type: object
          properties:
            fork:
              $ref: '#/components/schemas/Fork'
            genesis_validators_root:
              type: "string"
          required:
            - fork
            - genesis_validators_root
        signingRoot:
          type: "string"
      required:
        - type
        - fork_info
    SigningResponse:
      type: "object"
      properties:
        signature:
          type: "string"
          description: "Hex encoded string of signature"
          example: '0xb3baa751d0a9132cfe93e4e3d5ff9075111100e3789dca219ade5a24d27e19d16b3353149da1833e9b691bb38634e8dc04469be7032132906c927d7e1a49b414730612877bc6b2810c8f202daf793d1ab0d6b5cb21d52f9e52e883859887a5d9'
    AggregationSlotSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: "object"
          properties:
            aggregation_slot:
              type: "object"
              properties:
                slot:
                  type: string
                  format: "uint64"
          required:
            - aggregation_slot
    AggregateAndProofSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: object
          properties:
            aggregate_and_proof:
              $ref: "#/components/schemas/AggregateAndProof"
          required:
            - aggregate_and_proof
    AttestationSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: object
          properties:
            attestation:
              $ref: "#/components/schemas/AttestationData"
          required:
            - attestation
    BlockSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: object
          properties:
            block:
              $ref: "#/components/schemas/BeaconBlock"
          required:
            - block
    DepositSigning:
      type: object
      properties:
        type:
          type: "string"
        signingRoot:
          description: 'signing root for optional verification if field present'
          type: "string"
        deposit:
          type: object
          properties:
            pubkey:
              type: "string"
            withdrawal_credentials:
              type: "string"
            amount:
              type: "string"
            genesis_fork_version:
              type: "string"
              description: Bytes4 hexadecimal
      required:
        - type
        - deposit
    RandaoRevealSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: object
          properties:
            randao_reveal:
              $ref: "#/components/schemas/RandaoReveal"
          required:
            - randao_reveal
    VoluntaryExitSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: object
          properties:
            voluntary_exit:
              $ref: "#/components/schemas/VoluntaryExit"
          required:
            - voluntary_exit
    SyncCommitteeMessageSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: object
          properties:
            sync_committee_message:
              $ref: "#/components/schemas/SyncCommitteeMessage"
          required:
            - sync_committee_message
    SyncCommitteeSelectionProofSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: object
          properties:
            sync_aggregator_selection_data:
              $ref: "#/components/schemas/SyncAggregatorSelectionData"
          required:
            - sync_aggregator_selection_data
    SyncCommitteeContributionAndProofSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - type: object
          properties:
            contribution_and_proof:
              $ref: "#/components/schemas/ContributionAndProof"
          required:
            - contribution_and_proof
    ValidatorRegistrationSigning:
      allOf:
        - type: object
          properties:
            type:
              type: "string"
            signingRoot:
              description: 'signing root for optional verification if field present'
              type: "string"
            validator_registration:
              "$ref": "#/components/schemas/ValidatorRegistration"
            epoch:
              type: string
              format: "uint64"
          required:
            - type
            - validator_registration
            - epoch
    RandaoReveal:
      type: "object"
      properties:
        epoch:
          type: string
          format: "uint64"
    AttestationData:
      type: "object"
      properties:
        slot:
          type: "string"
          format: "uint64"
        index:
          type: "string"
          format: "uint64"
        beacon_block_root:
          type: "string"
        source:
          $ref: "#/components/schemas/Checkpoint"
        target:
          $ref: "#/components/schemas/Checkpoint"
    Checkpoint:
      type: "object"
      properties:
        epoch:
          type: "string"
        root:
          type: "string"
    Fork:
      type: "object"
      properties:
        previous_version:
          pattern: "^0x[a-fA-F0-9]{8}$"
          type: "string"
        current_version:
          pattern: "^0x[a-fA-F0-9]{8}$"
          type: "string"
        epoch:
          type: "string"
    BeaconBlock:
      type: "object"
      properties:
        slot:
          type: "string"
          format: "uint64"
        proposer_index:
          type: "string"
          format: "uint64"
        parent_root:
          type: "string"
        state_root:
          type: "string"
        body:
          $ref: "#/components/schemas/BeaconBlockBody"
    BeaconBlockBody:
      type: "object"
      properties:
        randao_reveal:
          type: "string"
        eth1_data:
          "$ref": "#/components/schemas/Eth1Data"
        graffiti:
          type: "string"
          description: "Bytes32 hexadecimal"
        proposer_slashings:
          type: "array"
          items:
            $ref: "#/components/schemas/ProposerSlashing"
        attester_slashings:
          type: "array"
          items:
            $ref: "#/components/schemas/AttesterSlashing"
        attestations:
          type: "array"
          items:
            $ref: "#/components/schemas/Attestation"
        deposits:
          type: "array"
          items:
            $ref: "#/components/schemas/Deposit"
        voluntary_exits:
          type: "array"
          items:
            $ref: "#/components/schemas/SignedVoluntaryExit"
    Eth1Data:
      type: "object"
      properties:
        deposit_root:
          type: "string"
        deposit_count:
          type: "string"
          format: "uint64"
        block_hash:
          type: "string"
    ProposerSlashing:
      type: "object"
      properties:
        signed_header_1:
          "$ref": "#/components/schemas/SignedBeaconBlockHeader"
        signed_header_2:
          "$ref": "#/components/schemas/SignedBeaconBlockHeader"
    AttesterSlashing:
      type: "object"
      properties:
        attestation_1:
          "$ref": "#/components/schemas/IndexedAttestation"
        attestation_2:
          "$ref": "#/components/schemas/IndexedAttestation"
    Attestation:
      type: "object"
      properties:
        aggregation_bits:
          type: "string"
        data:
          $ref: "#/components/schemas/AttestationData"
        signature:
          type: "string"
    Deposit:
      type: "object"
      properties:
        proof:
          type: "array"
          items:
            type: "string"
        data:
          $ref: "#/components/schemas/DepositData"
    SignedVoluntaryExit:
      type: "object"
      properties:
        message:
          $ref: "#/components/schemas/VoluntaryExit"
        signature:
          type: "string"
    SignedBeaconBlockHeader:
      type: "object"
      properties:
        message:
          $ref: "#/components/schemas/BeaconBlockHeader"
        signature:
          type: "string"
    IndexedAttestation:
      type: object
      properties:
        attesting_indices:
          type: array
          items:
            type: string
            format: uint64
        data:
          "$ref": "#/components/schemas/AttestationData"
        signature:
          type: string
    DepositData:
      type: "object"
      properties:
        pubkey:
          type: "string"
        withdrawal_credentials:
          type: "string"
        amount:
          type: "string"
        signature:
          type: "string"
    VoluntaryExit:
      type: object
      properties:
        epoch:
          type: string
          format: uint64
        validator_index:
          type: string
          format: uint64
    BeaconBlockHeader:
      type: object
      properties:
        slot:
          type: string
          format: uint64
        proposer_index:
          type: string
          format: uint64
        parent_root:
          type: string
          description: Bytes32 hexadecimal
        state_root:
          type: string
          description: Bytes32 hexadecimal
        body_root:
          type: string
          description: Bytes32 hexadecimal
    AggregateAndProof:
      type: object
      properties:
        aggregator_index:
          type: string
          format: uint64
        aggregate:
          "$ref": "#/components/schemas/Attestation"
        selection_proof:
          type: string
          description: Bytes96 hexadecimal
    SyncCommitteeMessage:
      type: object
      properties:
        beacon_block_root:
          type: string
          description: Bytes32 hexadecimal
        slot:
          type: string
          format: uint64
    SyncAggregatorSelectionData:
      type: object
      properties:
        slot:
          type: string
          format: uint64
        subcommittee_index:
          type: string
          format: uint64
    ContributionAndProof:
      type: object
      properties:
        aggregator_index:
          type: string
          format: uint64
        selection_proof:
          type: string
          description: Bytes96 hexadecimal
        contribution:
          "$ref": "#/components/schemas/SyncCommitteeContribution"
    SyncCommitteeContribution:
      type: object
      properties:
        slot:
          type: string
          format: uint64
        beacon_block_root:
          type: string
          description: Bytes32 hexadecimal
        subcommittee_index:
          type: string
          format: uint64
        aggregation_bits:
          type: string
          description: SSZ hexadecimal
        signature:
          type: string
          description: Bytes96 hexadecimal
    ValidatorRegistration:
      type: object
      properties:
        fee_recipient:
          type: string
          description: Bytes20 hexadecimal
        gas_limit:
          type: string
          format: uint64
        timestamp:
          type: string
          format: uint64
        pubkey:
          type: string
    BeaconBlockSigning:
      allOf:
        - $ref: '#/components/schemas/Signing'
        - $ref: '#/components/schemas/BeaconBlockRequest'
    BeaconBlockRequest:
      type: object
      properties:
        beacon_block:
          anyOf:
            - $ref: '#/components/schemas/BlockRequestPhase0'
            - $ref: '#/components/schemas/BlockRequestAltair'
            - $ref: '#/components/schemas/BlockRequestBellatrix'
      required:
        - beacon_block
    BlockRequestPhase0:
      type: object
      properties:
        version:
          type: string
          enum:
            - PHASE0
          description: 'version to identify block request type.'
        block:
          $ref: "#/components/schemas/BeaconBlock"
      required:
        - version
        - block
    BlockRequestAltair:
      type: object
      properties:
        version:
          type: string
          enum:
            - ALTAIR
          description: 'version to identify block request type.'
        block:
          $ref: "#/components/schemas/BeaconBlockAltair"
      required:
        - version
        - block
    BlockRequestBellatrix:
      type: object
      properties:
        version:
          type: string
          enum:
            - BELLATRIX
          description: 'version to identify block request type.'
        block_header:
          $ref: "#/components/schemas/BeaconBlockHeader"
      required:
        - version
        - block_header
    BeaconBlockAltair:
      type: "object"
      properties:
        slot:
          type: "string"
          format: "uint64"
        proposer_index:
          type: "string"
          format: "uint64"
        parent_root:
          type: "string"
        state_root:
          type: "string"
        body:
          $ref: "#/components/schemas/BeaconBlockBodyAltair"
    BeaconBlockBodyAltair:
      allOf:
        - $ref: "#/components/schemas/BeaconBlockBody"
        - type: object
          properties:
            sync_aggregate:
              $ref: "#/components/schemas/SyncAggregate"
    SyncAggregate:
      type: object
      properties:
        sync_committee_bits:
          type: string
          description: SSZ hexadecimal
        sync_committee_signature:
          type: string
          description: Bytes96 hexadecimal
externalDocs:
  description: 'Web3Signer User Documentation'
  url: 'https://docs.web3signer.consensys.net/'